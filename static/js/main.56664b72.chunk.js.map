{"version":3,"sources":["constants.js","components/Buttons/Buttons.jsx","components/GoodList/GoodList.jsx","App.jsx","index.jsx"],"names":["ORDER","DIRECTION","Buttons","sortAlphabetically","sortByLength","reverse","reset","order","direction","className","type","cn","onClick","GoodList","goods","map","good","goodsFromServer","App","useState","setOrder","setDirection","preparedGoods","sortOrder","sortDirection","goodsCopy","sort","next","prev","localeCompare","length","prepareGoods","ReactDOM","render","document","getElementById"],"mappings":"0OAAaA,EACK,iBADLA,EAEA,YAFAA,EAGC,aAGDC,EACD,WADCA,EAED,W,OCJCC,EAAU,SAAC,GAAD,IACrBC,EADqB,EACrBA,mBACAC,EAFqB,EAErBA,aACAC,EAHqB,EAGrBA,QACAC,EAJqB,EAIrBA,MACAC,EALqB,EAKrBA,MACAC,EANqB,EAMrBA,UANqB,OAQrB,sBAAKC,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYJ,IAAUP,IAExBY,QAAST,EALX,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYJ,IAAUP,IAExBY,QAASR,EALX,4BAUA,wBACEM,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYH,IAAcP,IAE5BW,QAASP,EALX,sBAUGG,IAAcP,GAAsBM,IAAUP,IAE7C,wBACEU,KAAK,SACLD,UAAU,4BACVG,QAASN,EAHX,uBC7CKO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SCIjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAwBWC,EAAM,WACjB,MAA0BC,mBAASnB,GAAnC,mBAAOO,EAAP,KAAca,EAAd,KACA,EAAkCD,mBAASlB,GAA3C,mBAAOO,EAAP,KAAkBa,EAAlB,KAYMC,EAnCa,SAACR,EAAOS,EAAWC,GACtC,IAAMC,EAAS,YAAOX,GAEtB,OAAQS,GACN,KAAKvB,EACHyB,EAAUC,MAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKE,cAAcD,MAClD,MACF,KAAK5B,EACHyB,EAAUC,MAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKG,OAASF,EAAKE,UAUtD,OAJIN,IAAkBvB,GACpBwB,EAAUpB,UAGLoB,EAiBeM,CACpBd,EAAiBV,EAAOC,GAG1B,OACE,sBAAKC,UAAU,kBAAf,UACE,cAAC,EAAD,CACEN,mBAAoB,kBAAMiB,EAASpB,IACnCI,aAAc,kBAAMgB,EAASpB,IAC7BK,QAAS,kBAlBTG,IAAcP,GAChBoB,EAAapB,QAGXO,IAAcP,GAChBoB,EAAapB,KAcXK,MAAO,WACLc,EAASpB,GACTqB,EAAapB,IAEfM,MAAOA,EACPC,UAAWA,IAEb,cAAC,EAAD,CAAUM,MAAOQ,QCrEvBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.56664b72.chunk.js","sourcesContent":["export const ORDER = {\n  ALPHABETICALLY: 'ALPHABETICALLY',\n  BY_LENGTH: 'BY_LENGTH',\n  BY_DEFAULT: 'BY_DEFAULT',\n};\n\nexport const DIRECTION = {\n  DIRECTLY: 'DIRECTLY',\n  OPPOSITE: 'OPPOSITE',\n};\n","import cn from 'classnames';\n\nimport { ORDER, DIRECTION } from '../../constants';\n\nexport const Buttons = ({\n  sortAlphabetically,\n  sortByLength,\n  reverse,\n  reset,\n  order,\n  direction,\n}) => (\n  <div className=\"buttons\">\n    <button\n      type=\"button\"\n      className={cn('button', 'is-info', {\n        'is-light': order !== ORDER.ALPHABETICALLY,\n      })}\n      onClick={sortAlphabetically}\n    >\n      Sort alphabetically\n    </button>\n\n    <button\n      type=\"button\"\n      className={cn('button', 'is-success', {\n        'is-light': order !== ORDER.BY_LENGTH,\n      })}\n      onClick={sortByLength}\n    >\n      Sort by length\n    </button>\n\n    <button\n      type=\"button\"\n      className={cn('button', 'is-warning', {\n        'is-light': direction !== DIRECTION.OPPOSITE,\n      })}\n      onClick={reverse}\n    >\n      Reverse\n    </button>\n\n    { (direction !== DIRECTION.DIRECTLY || order !== ORDER.BY_DEFAULT)\n      && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n      )}\n  </div>\n);\n","export const GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { Buttons } from './components/Buttons';\nimport { GoodList } from './components/GoodList';\nimport { ORDER, DIRECTION } from './constants';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst prepareGoods = (goods, sortOrder, sortDirection) => {\n  const goodsCopy = [...goods];\n\n  switch (sortOrder) {\n    case ORDER.ALPHABETICALLY:\n      goodsCopy.sort((next, prev) => next.localeCompare(prev));\n      break;\n    case ORDER.BY_LENGTH:\n      goodsCopy.sort((next, prev) => next.length - prev.length);\n      break;\n    default:\n      break;\n  }\n\n  if (sortDirection === DIRECTION.OPPOSITE) {\n    goodsCopy.reverse();\n  }\n\n  return goodsCopy;\n};\n\nexport const App = () => {\n  const [order, setOrder] = useState(ORDER.BY_DEFAULT);\n  const [direction, setDirection] = useState(DIRECTION.DIRECTLY);\n\n  const switchDirection = () => {\n    if (direction === DIRECTION.DIRECTLY) {\n      setDirection(DIRECTION.OPPOSITE);\n    }\n\n    if (direction === DIRECTION.OPPOSITE) {\n      setDirection(DIRECTION.DIRECTLY);\n    }\n  };\n\n  const preparedGoods = prepareGoods(\n    goodsFromServer, order, direction,\n  );\n\n  return (\n    <div className=\"section content\">\n      <Buttons\n        sortAlphabetically={() => setOrder(ORDER.ALPHABETICALLY)}\n        sortByLength={() => setOrder(ORDER.BY_LENGTH)}\n        reverse={() => switchDirection()}\n        reset={() => {\n          setOrder(ORDER.BY_DEFAULT);\n          setDirection(DIRECTION.DIRECTLY);\n        }}\n        order={order}\n        direction={direction}\n      />\n      <GoodList goods={preparedGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}